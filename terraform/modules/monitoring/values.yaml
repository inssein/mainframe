# for this chart to work with k3s, a few things need to be done, and they are graciously documented at:
# https://fabianlee.org/2022/07/02/prometheus-installing-kube-prometheus-stack-on-k3s-cluster/

# disable etcd by default since k3s has a sql-lite backed implementation
# also disabled alert manager because we don't need it
defaultRules:
  rules:
    etcd: false
    alertmanager: false

kubeEtcd:
  enabled: false

kubeControllerManager:
  enabled: true
  endpoints: ['192.168.50.22']
  service:
    enabled: true
    port: 10252
    targetPort: 10252
  serviceMonitor:
    enabled: true
    https: false

# matched to service port 'prom-stack-kube-prometheus-kube-scheduler' -n kube-system
kubeScheduler:
  enabled: true
  endpoints: ['192.168.50.22']
  service:
    enabled: true
    port: 10251
    targetPort: 10251
  serviceMonitor:
    enabled: true
    https: false

# matched to service port 'prom-stack-kube-prometheus-kube-proxy' -n kube-system
kubeProxy:
  enabled: true
  endpoints: ['192.168.50.22']
  service:
    enabled: true
    port: 10249
    targetPort: 10249

grafana:
  ingress:
    enabled: true
    ingressClassName: "nginx"
    hosts:
      - "grafana.internal.mnara.ca"
    tls:
      - hosts: 
        - "grafana.internal.mnara.ca"
  grafanaSpec:
    volumeClaimTemplate:
      spec:
        storageClassName: longhorn
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi

alertmanager:
  enabled: false

prometheus:
  ingress:
    enabled: true
    ingressClassName: "nginx"
    hosts:
      - "prometheus.internal.mnara.ca"
    tls:
      - hosts:
        - "prometheus.internal.mnara.ca"
  prometheusSpec:
    volumeClaimTemplate:
      spec:
        storageClassName: longhorn
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 2Gi
